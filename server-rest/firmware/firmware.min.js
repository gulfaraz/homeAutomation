"use strict";!function(){function t(t,n){function i(t){digitalWrite(switchList[t],0),n[t]=defaultDeviceId;var e=n.map(function(t){return t.length}).reduce(function(t,n){return t+n},0)>defaultDeviceId.length*switchList.length?configuration.home:homeDefault;configuration.save(e,n),restartDevice()}function o(t,n){c.publish("State/"+t,1===digitalRead(n)?"on":"off")}var c=tinyMQTT.create(t.host);c.on("connected",function(){function t(t){c.subscribe("+/"+t),c.publish("Pair/"+t,"link")}for(var i in n){var o=n[i];o.length>defaultDeviceId.length&&setTimeout(t,(i+1)*e,o)}}),c.on("message",function(t){var e=t.topic.split("/"),c=e.shift(),a=e.join("/"),r=t.message.substring(2),u=n.map(function(t,n){return t==a?switchList[n]:0});for(var s in u){var f=u[s];f&&("Control"===c?(digitalWrite(f,"on"===r?1:0),o(a,f)):"Acknowledgement"===c?"failed"===r?i(s):"state"===r&&o(a,f):"Pair"===c&&"false"===r&&i(s))}}),c.on("disconnected",function(){c.connect()}),c.connect({port:t.port,keep_alive:t.keepAlive})}function n(){t(configuration.mqtt,configuration.deviceIdList)}var e=500;n()}();